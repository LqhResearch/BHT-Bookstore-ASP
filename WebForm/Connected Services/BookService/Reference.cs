//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.BookService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookService.BookServiceSoap")]
    public interface BookServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItemById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetItemById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItemById", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetItemByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTable", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTableWithPage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTableWithPage(string startIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTableWithPage", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableWithPageAsync(string startIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Search", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Search(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Search", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Add(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddAsync(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Edit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Edit(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Edit", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EditAsync(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Delete(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLanguageTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetLanguageTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLanguageTable", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLanguageTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastedBooks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetLastedBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastedBooks", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLastedBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTop3Books", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTop3Books();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTop3Books", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTop3BooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTableByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTableByCategory(string categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTableByCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableByCategoryAsync(string categoryID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BookServiceSoapChannel : WebForm.BookService.BookServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceSoapClient : System.ServiceModel.ClientBase<WebForm.BookService.BookServiceSoap>, WebForm.BookService.BookServiceSoap {
        
        public BookServiceSoapClient() {
        }
        
        public BookServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetItemById(string id) {
            return base.Channel.GetItemById(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetItemByIdAsync(string id) {
            return base.Channel.GetItemByIdAsync(id);
        }
        
        public System.Data.DataTable GetTable() {
            return base.Channel.GetTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableAsync() {
            return base.Channel.GetTableAsync();
        }
        
        public System.Data.DataTable GetTableWithPage(string startIndex) {
            return base.Channel.GetTableWithPage(startIndex);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableWithPageAsync(string startIndex) {
            return base.Channel.GetTableWithPageAsync(startIndex);
        }
        
        public System.Data.DataTable Search(string keyword) {
            return base.Channel.Search(keyword);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchAsync(string keyword) {
            return base.Channel.SearchAsync(keyword);
        }
        
        public bool Add(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID) {
            return base.Channel.Add(isbn, bookTitle, description, publishYear, weight, size, pageNumber, thumbnail, languageID, price, quantitySold, inventoryNumber, categoryID, publishID);
        }
        
        public System.Threading.Tasks.Task<bool> AddAsync(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID) {
            return base.Channel.AddAsync(isbn, bookTitle, description, publishYear, weight, size, pageNumber, thumbnail, languageID, price, quantitySold, inventoryNumber, categoryID, publishID);
        }
        
        public bool Edit(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID) {
            return base.Channel.Edit(isbn, bookTitle, description, publishYear, weight, size, pageNumber, thumbnail, languageID, price, quantitySold, inventoryNumber, categoryID, publishID);
        }
        
        public System.Threading.Tasks.Task<bool> EditAsync(string isbn, string bookTitle, string description, string publishYear, string weight, string size, string pageNumber, string thumbnail, string languageID, string price, string quantitySold, string inventoryNumber, string categoryID, string publishID) {
            return base.Channel.EditAsync(isbn, bookTitle, description, publishYear, weight, size, pageNumber, thumbnail, languageID, price, quantitySold, inventoryNumber, categoryID, publishID);
        }
        
        public bool Delete(string isbn) {
            return base.Channel.Delete(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string isbn) {
            return base.Channel.DeleteAsync(isbn);
        }
        
        public System.Data.DataTable GetLanguageTable() {
            return base.Channel.GetLanguageTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLanguageTableAsync() {
            return base.Channel.GetLanguageTableAsync();
        }
        
        public System.Data.DataTable GetLastedBooks() {
            return base.Channel.GetLastedBooks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLastedBooksAsync() {
            return base.Channel.GetLastedBooksAsync();
        }
        
        public System.Data.DataTable GetTop3Books() {
            return base.Channel.GetTop3Books();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTop3BooksAsync() {
            return base.Channel.GetTop3BooksAsync();
        }
        
        public System.Data.DataTable GetTableByCategory(string categoryID) {
            return base.Channel.GetTableByCategory(categoryID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableByCategoryAsync(string categoryID) {
            return base.Channel.GetTableByCategoryAsync(categoryID);
        }
    }
}
