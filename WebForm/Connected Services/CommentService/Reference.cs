//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.CommentService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommentService.CommentServiceSoap")]
    public interface CommentServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCommentAndRatingByISBN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetCommentAndRatingByISBN(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCommentAndRatingByISBN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCommentAndRatingByISBNAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddComment(string isbn, string username, string desc, string active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddComment", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(string isbn, string username, string desc, string active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EditComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EditComment(string commentID, string desc, string active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EditComment", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EditCommentAsync(string commentID, string desc, string active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteComment(string commentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteComment", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteCommentAsync(string commentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddRating(string isbn, string username, string point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRating", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddRatingAsync(string isbn, string username, string point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EditRating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EditRating(string ratingID, string point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EditRating", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EditRatingAsync(string ratingID, string point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteRating(string ratingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRating", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteRatingAsync(string ratingID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommentServiceSoapChannel : WebForm.CommentService.CommentServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommentServiceSoapClient : System.ServiceModel.ClientBase<WebForm.CommentService.CommentServiceSoap>, WebForm.CommentService.CommentServiceSoap {
        
        public CommentServiceSoapClient() {
        }
        
        public CommentServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommentServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommentServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommentServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetCommentAndRatingByISBN(string isbn) {
            return base.Channel.GetCommentAndRatingByISBN(isbn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCommentAndRatingByISBNAsync(string isbn) {
            return base.Channel.GetCommentAndRatingByISBNAsync(isbn);
        }
        
        public bool AddComment(string isbn, string username, string desc, string active) {
            return base.Channel.AddComment(isbn, username, desc, active);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(string isbn, string username, string desc, string active) {
            return base.Channel.AddCommentAsync(isbn, username, desc, active);
        }
        
        public bool EditComment(string commentID, string desc, string active) {
            return base.Channel.EditComment(commentID, desc, active);
        }
        
        public System.Threading.Tasks.Task<bool> EditCommentAsync(string commentID, string desc, string active) {
            return base.Channel.EditCommentAsync(commentID, desc, active);
        }
        
        public bool DeleteComment(string commentID) {
            return base.Channel.DeleteComment(commentID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCommentAsync(string commentID) {
            return base.Channel.DeleteCommentAsync(commentID);
        }
        
        public bool AddRating(string isbn, string username, string point) {
            return base.Channel.AddRating(isbn, username, point);
        }
        
        public System.Threading.Tasks.Task<bool> AddRatingAsync(string isbn, string username, string point) {
            return base.Channel.AddRatingAsync(isbn, username, point);
        }
        
        public bool EditRating(string ratingID, string point) {
            return base.Channel.EditRating(ratingID, point);
        }
        
        public System.Threading.Tasks.Task<bool> EditRatingAsync(string ratingID, string point) {
            return base.Channel.EditRatingAsync(ratingID, point);
        }
        
        public bool DeleteRating(string ratingID) {
            return base.Channel.DeleteRating(ratingID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRatingAsync(string ratingID) {
            return base.Channel.DeleteRatingAsync(ratingID);
        }
    }
}
